# Задача 36: Напишите функцию print_operation_table(operation, num_rows=6, num_columns=6),
# которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки и
# столбца. Аргументы num_rows и num_columns указывают число строк и столбцов таблицы,
# которые должны быть распечатаны. Нумерация строк и столбцов идет с единицы (подумайте,
# почему не с нуля). Примечание: бинарной операцией называется любая операция, у которой
# ровно два аргумента, как, например, у операции умножения.


def print_operation_table(operation, num_rows=6, num_columns=6):
    for row in range(1, num_rows + 1):
        for col in range(1, num_columns + 1):
            print(operation(row, col), end='\t')
        print() 

rows = 10
cols = 10
operation = lambda x,y: x * y
print_operation_table(operation, rows, cols)

# OUTPUT x ** y, 8, 8 =========================================================
# 1       1       1       1       1       1       1       1
# 2       4       8       16      32      64      128     256
# 3       9       27      81      243     729     2187    6561
# 4       16      64      256     1024    4096    16384   65536
# 5       25      125     625     3125    15625   78125   390625
# 6       36      216     1296    7776    46656   279936  1679616
# 7       49      343     2401    16807   117649  823543  5764801
# 8       64      512     4096    32768   262144  2097152 16777216
# OUTPUT x * y, 10, 10 =========================================================
# 1       2       3       4       5       6       7       8       9       10
# 2       4       6       8       10      12      14      16      18      20
# 3       6       9       12      15      18      21      24      27      30
# 4       8       12      16      20      24      28      32      36      40
# 5       10      15      20      25      30      35      40      45      50
# 6       12      18      24      30      36      42      48      54      60
# 7       14      21      28      35      42      49      56      63      70
# 8       16      24      32      40      48      56      64      72      80
# 9       18      27      36      45      54      63      72      81      90
# 10      20      30      40      50      60      70      80      90      100
# ==============================================================================